package Project;

public class Packet {

	// RCT Time(현재 시간) 설정
	byte[] RTC_Time(byte mode, byte[] time) {
		byte[] buffer = { (byte) 0x02, (byte) mode, (byte) 0xFF, (byte) 0x54, (byte) 0xFF, (byte) 0x00, (byte) 0xFF,
				(byte) time[0], (byte) time[1], (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0x03 };
		return buffer;
	}

	// 조명, 팬 On/Off 입력
	byte[] Ch_OnOff(byte ch, byte onOff) {
		byte[] buffer = { (byte) 0x02, (byte) 0x01, (byte) 0xFF, (byte) 0x4C, (byte) 0xFF, (byte) ch, (byte) 0xFF,
				(byte) onOff, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0x03 };
		return buffer;
	}

	// Intensity 입력
	byte[] Intensity(byte ch, byte intensity) {
		byte[] buffer = { (byte) 0x02, (byte) 0x01, (byte) 0xFF, (byte) 0x49, (byte) 0xFF, (byte) ch, (byte) 0xFF,
				(byte) intensity, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0x03 };
		return buffer;
	}

	// PWM / Duty 입력
	byte[] PWM_Duty(byte ch, byte pwm, byte duty) {
		byte[] buffer = { (byte) 0x02, (byte) 0x01, (byte) 0xFF, (byte) 0x50, (byte) 0xFF, (byte) ch, (byte) 0xFF,
				(byte) 0x00, (byte) 0x00, (byte) pwm, (byte) 0x00, (byte) 0x00, (byte) duty, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0x03 };
		return buffer;
	}

	// 조명, 팬 On/Off Time 입력
	byte[] Ch_OnOff_Time(byte ch, byte[] onTime, byte[] offTime) {
		byte[] buffer = { (byte) 0x02, (byte) 0x01, (byte) 0xFF, (byte) 0x55, (byte) 0xFF, (byte) ch, (byte) 0xFF,
				(byte) onTime[0], (byte) onTime[1], (byte) offTime[0], (byte) offTime[1], (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0x03 };
		return buffer;
	}

	// 센서 시간, 온도, 습도, CO2, 조도, 가스 불러오기
	byte[] Sensor_Check() {
		byte[] buffer = { (byte) 0x02, (byte) 0x02, (byte) 0xFF, (byte) 0x53, (byte) 0xFF, (byte) 0x00, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0x03 };
		return buffer;
	}

	// 메인 시간, 동작여부 불러오기
	byte[] Main_Check() {
		byte[] buffer = { (byte) 0x02, (byte) 0x01, (byte) 0xFF, (byte) 0x53, (byte) 0xFF, (byte) 0x00, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0x03 };
		return buffer;
	}

	// PWM / Duty 수치, 전류 수치 불러오기
	byte[] PWM_Duty_Check() {
		byte[] buffer = { (byte) 0x02, (byte) 0x01, (byte) 0xFF, (byte) 0x73, (byte) 0xFF, (byte) 0x00, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0x03 };
		return buffer;
	}

	// 조명, 팬 On/Off Time 불러오기
	byte[] OnOff_Time_Check() {
		byte[] buffer = { (byte) 0x02, (byte) 0x01, (byte) 0xFF, (byte) 0x52, (byte) 0xFF, (byte) 0x00, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF,
				(byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0xFF, (byte) 0x03 };
		return buffer;
	}
}
